const tester = require("circom_tester").wasm;

describe("Proof of Innocence", async () => {
  it("Should", async () => {
    const circuit = await tester("./src/proof-of-innocence.circom", {
      reduceConstraints: false,
    });

    const inputs = {
      messageHashesRoot:
        "18813208553589742972656176573078501630237832271937545640091227364189843112414",
      messageHashPathElements: [
        "5764922443595448489927971566131380474999841676657909070175450056524334412143",
        "16277580092307901857962719162036396188910835172466571119484468493600681103431",
        "15466584509342882280747710144800369511230237451665842701276913993444607939441",
        "2039788253199968668578575542305108019293747137535149567771194033821798169741",
        "4123047800071143996885663246364117050108714682370288628560973560112745337685",
        "10417635366601821923482990547864458928656800049517124951374690436301803375851",
        "18036143176456876650933689938946580665615266798911529059862132882256226965741",
        "7959687277912419247713420462284375647550045490877698179485745889385025985033",
        "3133385160869926643628119700531728173854915623480441237096377011172192230123",
        "18767272536593813939321172261162855136614009431401300428936935195535458905064",
        "5715205213015845364387052206849889843188282449933545435544812025608946666822",
        "11013175031749877081979736330659999751637067247483574805902945041305483682579",
        "10708260192616993577686743465610377735773279483333447100671640147037242870779",
        "17708681376628530799996447981717676562184543188562031708516142906406141650368",
        "3967876508977884960877910167550068853181553556854105674925421366723704424223",
        "18077967785446169488603147322170139942753858441115263187838141084900323103797",
      ],
      messageHashPathIndex: 499,
      nullifiers: [
        "0x25050ae751ea6ddc20d9b3dbee2681abde4c78112f2497a7fa4d71361c4b22da",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
      ],
      commitmentsOut: [
        "0x21d81af1caccd55b822d1f074c98e454ac87c57d421b56d2561c450873036657",
        "0x0e2cfcca9cbca92697686cb445cccc8e4972602e007bc0a7e99845c2ac969f62",
        "0x1846ed4b8930540f7f5c9c617b77873d68443ba15e5e0fcdb65dede62aa6ebbd",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
      ],
      isTransactionMode: true,
      token:
        "0x000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d6",
      publicKey: [
        "3761276351749423410534047032832854685244137872020595500086370487475758795824",
        "7228508792742893323465213416748392745620954915741357854227170296125058899855",
      ],
      randomIn: [
        "0xd551cafba0412f64a1555eadcbd84b4c",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
      ],
      valueIn: [
        "15355043851573136038",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
      ],
      leavesIndices: [
        "1360",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
        "2051258411002736885948763699317990061539314419500486054347250703186609807356",
      ],
      nullifyingKey:
        "12687410232037816058673450769163546852582472603937085778814101610453140014028",
      commInTest:
        "13070282796383281471581918523730777942007813667452373687548656229067837815053",
    };

    const witness = await circuit.calculateWitness(inputs);
    await circuit.checkConstraints(witness);
    // const output = await circuit.getDecoratedOutput(witness);
    // console.log("output");
    // console.log(output);
  });
});
